on:
  push:
    tags:
      - '*'
  release:
    types: [created]
name: Build release
jobs:
  build-docker-images:
    name: build docker images
    strategy:
      max-parallel: 48
      fail-fast: true
      matrix:
        arch: [ amd64 ]
        suffix: [ x86_64, x86_64-debug ]
        os: [ linux ]
        exclude:
          - {arch: amd64, suffix: arm64v8}
          - {arch: amd64, suffix: arm32v7}
          - {arch: arm64v8, suffix: x86_64}
          - {arch: arm64v8, suffix: arm32v7}
          - {arch: arm64v8, suffix: x86_64-debug}
          - {arch: arm32v7, suffix: x86_64}
          - {arch: arm32v7, suffix: arm64v8}
          - {arch: arm32v7, suffix: x86_64-debug}
    runs-on: [ ubuntu-latest ] #self-hosted, Linux, X64, packet-builder]
    steps:
      - uses: actions/checkout@master
      - name: Setup environment
        run: |
          sudo apt-get install --yes qemu binfmt-support qemu-user-static qemu-utils qemu-efi-aarch64 qemu-system-arm docker.io containerd runc
          sudo systemctl unmask docker && sudo systemctl start docker
          docker run --rm --privileged --name qemu multiarch/qemu-user-static:register --reset
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - uses: frabert/replace-string-action@master
        id: formatted_version
        with:
          pattern: '[v]*(.*)$'
          string: "${{ steps.get_version.outputs.VERSION }}"
          replace-with: '$1'
          flags: 'g'

      - name: Build the docker images
        run: docker buildx build --no-cache -f ./dockerfiles/Dockerfile.${{ env.suffix }} -t ${{ env.dockerhub_username }}/fluent-bit:${{ env.suffix }}-${{ env.release }} --platform ${{ env.os }}/${{ env.arch }} .
        env:
          release: ${{ steps.formatted_version.outputs.replaced }}
          arch: ${{ matrix.arch }}
          suffix: ${{ matrix.suffix }}
          os: ${{ matrix.os }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: Archive the docker images
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: ${{ env.dockerhub_username }}/fluent-bit-pulsar-go:${{ env.arch }}-${{ env.release }}
        env:
          release: ${{ steps.formatted_version.outputs.replaced }}
          arch: ${{ matrix.arch }}
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
